{
  "address": "0x1D92883Af67C6d2247B7C160cA9F2c4f8B60d952",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalSubmitted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getProposals",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "internalType": "struct ProposalContract.Proposal[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "submitProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x3a9f952245fe33c6f996a6f1508670ef2dbdc39823e53ac4e213c4c1d0081f63",
  "receipt": {
    "to": null,
    "from": "0x1B4BB7176895116cCd727EB6f327EE9eD6ccC5b3",
    "contractAddress": "0x1D92883Af67C6d2247B7C160cA9F2c4f8B60d952",
    "transactionIndex": 21,
    "gasUsed": "518577",
    "logsBloom": "0x
    "blockHash": "0x8c139034bafb2110efeee3cf9f03b4ae6f546ad9010aaab32037559237117b97",
    "transactionHash": "0x3a9f952245fe33c6f996a6f1508670ef2dbdc39823e53ac4e213c4c1d0081f63",
    "logs": [],
    "blockNumber": 27503716,
    "cumulativeGasUsed": "10612430",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "6533a4aa42e63b1bbd328f75aab17865",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalSubmitted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getProposals\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct ProposalContract.Proposal[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"submitProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"BuidlGuidl\",\"kind\":\"dev\",\"methods\":{\"submitProposal(string,string)\":{\"params\":{\"_title\":\"(string memory) - new proposal title to save on the contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"submitProposal(string,string)\":{\"notice\":\"Function that allows anyone to send a proposal\"}},\"notice\":\"A smart contract that allows users to create proposals and retrieve a list of all proposals.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ProposalContract.sol\":\"ProposalContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ProposalContract.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.0 <0.9.0;\\r\\n\\r\\n/**\\r\\n * A smart contract that allows users to create proposals and retrieve a list of all proposals.\\r\\n * @author BuidlGuidl\\r\\n */\\r\\ncontract ProposalContract {\\r\\n    struct Proposal {\\r\\n        string title;\\r\\n        string description;\\r\\n    }\\r\\n\\r\\n    // State Variables\\r\\n    mapping(uint256 => Proposal) public proposals; // starts at 0\\r\\n    uint256 public totalCounter = 0;\\r\\n\\r\\n    // Events: a way to emit log statements from smart contract that can be listened to by external parties\\r\\n    event ProposalSubmitted(uint256 indexed id, string title, string description);\\r\\n\\r\\n    // Constructor: Called once on contract deployment\\r\\n    // Check packages/hardhat/deploy/00_deploy_your_contract.ts\\r\\n    constructor() {\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function that allows anyone to send a proposal\\r\\n     *\\r\\n     * @param _title (string memory) - new proposal title to save on the contract\\r\\n     */\\r\\n    function submitProposal(string memory _title, string memory _description) public {\\r\\n        proposals[totalCounter] = Proposal(_title, _description);\\r\\n        totalCounter += 1;\\r\\n\\r\\n        // emit: keyword used to trigger an event\\r\\n        emit ProposalSubmitted(totalCounter, _title, _description);\\r\\n    }\\r\\n\\r\\n    function getProposals() public view returns (Proposal[] memory) {\\r\\n        Proposal[] memory proposalsList = new Proposal[](totalCounter);\\r\\n        for (uint256 i = 0; i < totalCounter; i++) {\\r\\n            proposalsList[i] = proposals[i];\\r\\n        }\\r\\n        return proposalsList;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x3d88867ea0f253934703aa24b5d73672d971076dea89de0f00b0d3c0a2b1d39a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600060015534801561001557600080fd5b50610860806100256000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063013cf08b1461005157806362564c481461007b57806397feba9d14610090578063be0dc4b7146100a7575b600080fd5b61006461005f366004610470565b6100bc565b6040516100729291906104cf565b60405180910390f35b6100836101e8565b60405161007291906104fd565b61009960015481565b604051908152602001610072565b6100ba6100b5366004610625565b6103cd565b005b6000602081905290815260409020805481906100d790610689565b80601f016020809104026020016040519081016040528092919081815260200182805461010390610689565b80156101505780601f1061012557610100808354040283529160200191610150565b820191906000526020600020905b81548152906001019060200180831161013357829003601f168201915b50505050509080600101805461016590610689565b80601f016020809104026020016040519081016040528092919081815260200182805461019190610689565b80156101de5780601f106101b3576101008083540402835291602001916101de565b820191906000526020600020905b8154815290600101906020018083116101c157829003601f168201915b5050505050905082565b6060600060015467ffffffffffffffff81111561020757610207610582565b60405190808252806020026020018201604052801561024c57816020015b60408051808201909152606080825260208201528152602001906001900390816102255790505b50905060005b6001548110156103c75760008181526020819052604090819020815180830190925280548290829061028390610689565b80601f01602080910402602001604051908101604052809291908181526020018280546102af90610689565b80156102fc5780601f106102d1576101008083540402835291602001916102fc565b820191906000526020600020905b8154815290600101906020018083116102df57829003601f168201915b5050505050815260200160018201805461031590610689565b80601f016020809104026020016040519081016040528092919081815260200182805461034190610689565b801561038e5780601f106103635761010080835404028352916020019161038e565b820191906000526020600020905b81548152906001019060200180831161037157829003601f168201915b5050505050815250508282815181106103a9576103a96106bd565b602002602001018190525080806103bf906106e9565b915050610252565b50919050565b604080518082018252838152602080820184905260015460009081529081905291909120815181906103ff9082610751565b50602082015160018201906104149082610751565b50905050600180600082825461042a9190610811565b90915550506001546040517f1fb50fa98072604de89724f330e5136232a44a24ef74563e1222cea5ac3f3b0c9061046490859085906104cf565b60405180910390a25050565b60006020828403121561048257600080fd5b5035919050565b6000815180845260005b818110156104af57602081850181015186830182015201610493565b506000602082860101526020601f19601f83011685010191505092915050565b6040815260006104e26040830185610489565b82810360208401526104f48185610489565b95945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561057457888303603f190185528151805187855261054888860182610489565b91890151858303868b01529190506105608183610489565b968901969450505090860190600101610524565b509098975050505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126105a957600080fd5b813567ffffffffffffffff808211156105c4576105c4610582565b604051601f8301601f19908116603f011681019082821181831017156105ec576105ec610582565b8160405283815286602085880101111561060557600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561063857600080fd5b823567ffffffffffffffff8082111561065057600080fd5b61065c86838701610598565b9350602085013591508082111561067257600080fd5b5061067f85828601610598565b9150509250929050565b600181811c9082168061069d57607f821691505b6020821081036103c757634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016106fb576106fb6106d3565b5060010190565b601f82111561074c57600081815260208120601f850160051c810160208610156107295750805b601f850160051c820191505b8181101561074857828155600101610735565b5050505b505050565b815167ffffffffffffffff81111561076b5761076b610582565b61077f816107798454610689565b84610702565b602080601f8311600181146107b4576000841561079c5750858301515b600019600386901b1c1916600185901b178555610748565b600085815260208120601f198616915b828110156107e3578886015182559484019460019091019084016107c4565b50858210156108015787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115610824576108246106d3565b9291505056fea2646970667358221220bafcbda2a493769b07fa102d5044c6cc38eb85cca1178f46468f474bbd94f12e64736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063013cf08b1461005157806362564c481461007b57806397feba9d14610090578063be0dc4b7146100a7575b600080fd5b61006461005f366004610470565b6100bc565b6040516100729291906104cf565b60405180910390f35b6100836101e8565b60405161007291906104fd565b61009960015481565b604051908152602001610072565b6100ba6100b5366004610625565b6103cd565b005b6000602081905290815260409020805481906100d790610689565b80601f016020809104026020016040519081016040528092919081815260200182805461010390610689565b80156101505780601f1061012557610100808354040283529160200191610150565b820191906000526020600020905b81548152906001019060200180831161013357829003601f168201915b50505050509080600101805461016590610689565b80601f016020809104026020016040519081016040528092919081815260200182805461019190610689565b80156101de5780601f106101b3576101008083540402835291602001916101de565b820191906000526020600020905b8154815290600101906020018083116101c157829003601f168201915b5050505050905082565b6060600060015467ffffffffffffffff81111561020757610207610582565b60405190808252806020026020018201604052801561024c57816020015b60408051808201909152606080825260208201528152602001906001900390816102255790505b50905060005b6001548110156103c75760008181526020819052604090819020815180830190925280548290829061028390610689565b80601f01602080910402602001604051908101604052809291908181526020018280546102af90610689565b80156102fc5780601f106102d1576101008083540402835291602001916102fc565b820191906000526020600020905b8154815290600101906020018083116102df57829003601f168201915b5050505050815260200160018201805461031590610689565b80601f016020809104026020016040519081016040528092919081815260200182805461034190610689565b801561038e5780601f106103635761010080835404028352916020019161038e565b820191906000526020600020905b81548152906001019060200180831161037157829003601f168201915b5050505050815250508282815181106103a9576103a96106bd565b602002602001018190525080806103bf906106e9565b915050610252565b50919050565b604080518082018252838152602080820184905260015460009081529081905291909120815181906103ff9082610751565b50602082015160018201906104149082610751565b50905050600180600082825461042a9190610811565b90915550506001546040517f1fb50fa98072604de89724f330e5136232a44a24ef74563e1222cea5ac3f3b0c9061046490859085906104cf565b60405180910390a25050565b60006020828403121561048257600080fd5b5035919050565b6000815180845260005b818110156104af57602081850181015186830182015201610493565b506000602082860101526020601f19601f83011685010191505092915050565b6040815260006104e26040830185610489565b82810360208401526104f48185610489565b95945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561057457888303603f190185528151805187855261054888860182610489565b91890151858303868b01529190506105608183610489565b968901969450505090860190600101610524565b509098975050505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126105a957600080fd5b813567ffffffffffffffff808211156105c4576105c4610582565b604051601f8301601f19908116603f011681019082821181831017156105ec576105ec610582565b8160405283815286602085880101111561060557600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561063857600080fd5b823567ffffffffffffffff8082111561065057600080fd5b61065c86838701610598565b9350602085013591508082111561067257600080fd5b5061067f85828601610598565b9150509250929050565b600181811c9082168061069d57607f821691505b6020821081036103c757634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016106fb576106fb6106d3565b5060010190565b601f82111561074c57600081815260208120601f850160051c810160208610156107295750805b601f850160051c820191505b8181101561074857828155600101610735565b5050505b505050565b815167ffffffffffffffff81111561076b5761076b610582565b61077f816107798454610689565b84610702565b602080601f8311600181146107b4576000841561079c5750858301515b600019600386901b1c1916600185901b178555610748565b600085815260208120601f198616915b828110156107e3578886015182559484019460019091019084016107c4565b50858210156108015787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115610824576108246106d3565b9291505056fea2646970667358221220bafcbda2a493769b07fa102d5044c6cc38eb85cca1178f46468f474bbd94f12e64736f6c63430008140033",
  "devdoc": {
    "author": "BuidlGuidl",
    "kind": "dev",
    "methods": {
      "submitProposal(string,string)": {
        "params": {
          "_title": "(string memory) - new proposal title to save on the contract"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "submitProposal(string,string)": {
        "notice": "Function that allows anyone to send a proposal"
      }
    },
    "notice": "A smart contract that allows users to create proposals and retrieve a list of all proposals.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12,
        "contract": "contracts/ProposalContract.sol:ProposalContract",
        "label": "proposals",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_struct(Proposal)7_storage)"
      },
      {
        "astId": 15,
        "contract": "contracts/ProposalContract.sol:ProposalContract",
        "label": "totalCounter",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_mapping(t_uint256,t_struct(Proposal)7_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct ProposalContract.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)7_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)7_storage": {
        "encoding": "inplace",
        "label": "struct ProposalContract.Proposal",
        "members": [
          {
            "astId": 4,
            "contract": "contracts/ProposalContract.sol:ProposalContract",
            "label": "title",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 6,
            "contract": "contracts/ProposalContract.sol:ProposalContract",
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}